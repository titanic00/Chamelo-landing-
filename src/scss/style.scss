@use "sass:math";

// Подключение миксинов ===========================================================================================================================================================================================================================================================================
@import "base/mixins";

// Подключение шрифтов ===========================================================================================================================================================================================================================================================================
//&display=swap - добавить при подключении через плагин
@import url("https://fonts.googleapis.com/css?family=Poppins:regular,500,600,700&display=swap");
@import url("https://fonts.googleapis.com/css?family=Rubik:500&display=swap");

// Подключить если есть локальные файлы шрифтов
//@import "fonts/fonts";

// Подключение иконочных шрифтов ==============================================================================================================================================================================================================================================================================
// Подключить если есть файл иконочного шрифта
//@import "fonts/icons";

// Шрифт по умолчанию ==============================================================================================================================================================================================================================================================================
$fontFamily: Poppins;
$fontSize: rem(16); // где 14(px) - размер шрифта по умолчанию из макета

// Основные цвета
$mainColor: #86969B; // Цвет шрифта по умолчанию
$black: #0D161B;
$lightGreen: #A6F309;

// НАСТРОЙКИ ===============================================================================================================================================================================================================================================================================================
// Минимальная ширина страницы
$minWidth: 320;
// Ширина полотна (макета)
$maxWidth: 1920;
// Ширина ограничивающего контейнера (0 = нет ограничения)
$maxWidthContainer: 1260;
// Общий отступ у контейнера
// (30 = по 15px слева и справа, 0 = нет отступа)
$containerPadding: 30;

// Ширина срабатывания первого брейкпоинта
$containerWidth: $maxWidthContainer + $containerPadding;

// Брейк-поинты
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Тип адаптива:
// 1 = отзывчивость (у контейнера нет брейкпоинтов),
// 2 = по брейк-поинтам (контейнер меняет свою ширину по брейк-поинтам)
$responsiveType: 1;

// Обнуление и общие параметры ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null";

body {

	// Скролл заблокирован
	.lock & {
		overflow: hidden;
		touch-action: none;
	}

	// Сайт загружен
	.loaded & {}
}

// Оболочка ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
	min-height: 100%;
	display: flex;
	flex-direction: column;
	overflow: hidden;

	// Прижимаем footer
	>main {
		flex: 1 1 auto;
	}

	// Фикс для слайдеров
	>* {
		min-width: 0;
	}
}

// Ограничивающий контейнер ======================================================================================================================================================================================================================

/*
(i) Стили будут применяться ко 
всем классам содержащим *__container
Например header__container, main__container и т.д.
Снипет (HTML): cnt
*/
@if ($responsiveType==1) {

	// Отзывчивая
	[class*="__container"] {
		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
			margin: 0 auto;
		}

		@if ($containerPadding>0) {
			padding: 0 rem(math.div($containerPadding, 2));
		}
	}
}

@else {

	// По брейк-поинтам
	[class*="__container"] {
		margin: 0 auto;

		@if ($maxWidthContainer>0) {
			max-width: rem($maxWidthContainer);
			box-sizing: content-box;
		}

		@else {
			@if ($containerPadding>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}

		@media (max-width: $pc) {
			max-width: rem(970);
		}

		@media (max-width: $tablet) {
			max-width: rem(750);
		}

		@media (max-width: $mobile) {
			max-width: none;

			@if ($containerPadding>0 and $maxWidthContainer>0) {
				padding: 0 rem(math.div($containerPadding, 2));
			}
		}
	}
}

// Подключение базовых стилей, шаблонов (заготовок) и вспомогательных  классов
// Для подключения/отключения конкретных стилей смотри base.scss
@import "base";

// Подключение стилей общих элементов проекта
@import "common";

// Подключение стилей отдельных блоков
@import "header";
@import "footer";

// Подключение стилей отдельных страниц
@import "home";

//========================================================================================================================================================

.page {

	// .page__main-block

	&__main-block {
		@include adaptiveValue("margin-bottom", 70, 20);
	}

	// .page__transfer

	&__transfer {
		@include adaptiveValue("padding-top", 70, 20);
		@include adaptiveValue("padding-bottom", 65, 20);
	}

	// .page__receive

	&__receive {
		@include adaptiveValue("padding-top", 65, 20);
		@include adaptiveValue("padding-bottom", 65, 20);
	}

	// .page__feedback

	&__feedback {
		@include adaptiveValue("margin-top", 65, 20);
		@include adaptiveValue("margin-bottom", 65, 20);
	}

	// .page__start

	&__start {
		@include adaptiveValue("padding-top", 65, 20);
		@include adaptiveValue("padding-bottom", 65, 20);
	}

	// .page__advantages

	&__advantages {
		@include adaptiveValue("padding-top", 65, 20);
		@include adaptiveValue("padding-bottom", 110, 40);
	}
}